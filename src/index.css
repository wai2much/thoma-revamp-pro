@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 251 65% 65%;
    --foreground: 0 0% 100%;

    --card: 251 65% 72%;
    --card-foreground: 0 0% 100%;

    --popover: 251 65% 72%;
    --popover-foreground: 0 0% 100%;

    --primary: 271 91% 65%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 249 100% 75%;

    --secondary: 251 55% 55%;
    --secondary-foreground: 0 0% 100%;

    --muted: 251 40% 50%;
    --muted-foreground: 0 0% 95%;

    --accent: 355 100% 64%;
    --accent-foreground: 0 0% 100%;
    --accent-glow: 355 100% 74%;
    
    --stripe-pink: 355 100% 64%;
    --stripe-orange: 25 100% 75%;
    --stripe-purple: 271 91% 65%;
    --stripe-violet: 249 100% 75%;

    --destructive: 0 63% 45%;
    --destructive-foreground: 0 0% 100%;

    --border: 251 40% 80%;
    --input: 251 40% 80%;
    --ring: 271 91% 65%;

    --radius: 0.75rem;

    /* Purple gradient inspired by mockup */
    --gradient-primary: linear-gradient(180deg, hsl(251 70% 68%), hsl(251 60% 58%));
    --gradient-accent: linear-gradient(135deg, hsl(271 91% 65%), hsl(251 65% 65%));
    --gradient-hero: linear-gradient(180deg, hsl(251 70% 70%) 0%, hsl(251 65% 65%) 50%, hsl(251 60% 60%) 100%);
    --gradient-card: linear-gradient(135deg, hsl(251 70% 75% / 0.3), hsl(251 60% 70% / 0.3));
    --gradient-stripe: radial-gradient(circle at 20% 50%, hsl(271 91% 65% / 0.3) 0%, transparent 50%),
                       radial-gradient(circle at 80% 20%, hsl(251 70% 70% / 0.3) 0%, transparent 50%),
                       radial-gradient(circle at 40% 80%, hsl(249 100% 75% / 0.3) 0%, transparent 50%);
    --gradient-mesh: radial-gradient(at 0% 0%, hsl(251 70% 72% / 0.4) 0px, transparent 50%),
                     radial-gradient(at 100% 0%, hsl(271 91% 68% / 0.4) 0px, transparent 50%),
                     radial-gradient(at 50% 100%, hsl(251 60% 62% / 0.4) 0px, transparent 50%);
    
    /* Enhanced shadows with depth */
    --shadow-glow: 0 0 80px hsl(217 91% 60% / 0.5), 0 0 120px hsl(217 91% 60% / 0.2);
    --shadow-glow-accent: 0 0 80px hsl(271 91% 65% / 0.5), 0 0 120px hsl(271 91% 65% / 0.2);
    --shadow-card: 0 30px 60px -20px hsl(0 0% 0% / 0.8), 0 10px 30px -10px hsl(217 91% 60% / 0.2);
    --shadow-card-hover: 0 40px 80px -20px hsl(217 91% 60% / 0.4), 0 20px 40px -10px hsl(271 91% 65% / 0.3);
    --shadow-elevation-1: 0 2px 8px hsl(0 0% 0% / 0.4);
    --shadow-elevation-2: 0 8px 24px hsl(0 0% 0% / 0.5);
    --shadow-elevation-3: 0 16px 48px hsl(0 0% 0% / 0.6);
    --shadow-neon: 0 0 20px hsl(var(--primary) / 0.6), 0 0 40px hsl(var(--primary) / 0.3), inset 0 0 20px hsl(var(--primary) / 0.1);
    
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
    --transition-spring: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer utilities {
  .gradient-text {
    background: var(--gradient-hero);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradient-shift 8s ease infinite;
    background-size: 200% 200%;
  }
  
  .glass-card {
    background: hsl(0 0% 100% / 0.15);
    backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid hsl(0 0% 100% / 0.2);
    transition: var(--transition-smooth);
  }
  
  .glass-card:hover {
    background: hsl(0 0% 100% / 0.25);
    border-color: hsl(0 0% 100% / 0.3);
    box-shadow: 0 20px 40px -15px hsl(0 0% 0% / 0.2);
    transform: translateY(-4px);
  }
  
  .glass-card-premium {
    background: linear-gradient(135deg, hsl(var(--card) / 0.6), hsl(var(--card) / 0.4));
    backdrop-filter: blur(32px) saturate(220%);
    border: 2px solid transparent;
    background-clip: padding-box;
    position: relative;
    box-shadow: var(--shadow-elevation-2);
  }
  
  .glass-card-premium::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 2px;
    background: var(--gradient-primary);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
  
  .glass-card-premium:hover {
    transform: translateY(-6px) scale(1.01);
    box-shadow: var(--shadow-elevation-3), 0 0 50px hsl(var(--primary) / 0.25);
  }
  
  .glow-border {
    box-shadow: 0 0 30px hsl(var(--primary) / 0.3);
    transition: var(--transition-smooth);
  }
  
  .glow-border:hover {
    box-shadow: var(--shadow-glow);
  }
  
  .animated-gradient-bg {
    background: var(--gradient-mesh);
    animation: gradient-shift 15s ease infinite;
    background-size: 200% 200%;
  }
  
  .float-animation {
    animation: float 6s ease-in-out infinite;
  }
  
  .pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }
  
  .shimmer {
    background: linear-gradient(90deg, transparent 0%, hsl(var(--primary) / 0.1) 50%, transparent 100%);
    background-size: 200% 100%;
    animation: shimmer 3s linear infinite;
  }
  
  .tilt-card {
    transform-style: preserve-3d;
    transition: var(--transition-spring);
  }
  
  .tilt-card:hover {
    transform: translateY(-4px);
  }
  
  .depth-layer-1 {
    box-shadow: var(--shadow-elevation-1);
  }
  
  .depth-layer-2 {
    box-shadow: var(--shadow-elevation-2);
  }
  
  .depth-layer-3 {
    box-shadow: var(--shadow-elevation-3);
  }
  
  .neon-glow {
    box-shadow: var(--shadow-neon);
  }
  
  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }
  
  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 30px hsl(var(--primary) / 0.3); }
    50% { box-shadow: 0 0 60px hsl(var(--primary) / 0.6), 0 0 90px hsl(var(--primary) / 0.3); }
  }
  
  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }
  
  .perspective-1000 {
    perspective: 1000px;
  }
  
  .transform-3d {
    transform-style: preserve-3d;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
